// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VistoriaApp.Data;

#nullable disable

namespace VistoriaApp.Migrations
{
    [DbContext(typeof(VistoriaContext))]
    [Migration("20231114210517_Criandotabelas-v1")]
    partial class Criandotabelasv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VistoriaApp.Models.AmbienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsEletrica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsEsquadrias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsHidraulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsPintura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsPiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsTeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReparoEletrica")
                        .HasColumnType("bit");

                    b.Property<bool>("ReparoEsquadrias")
                        .HasColumnType("bit");

                    b.Property<bool>("ReparoHidraulica")
                        .HasColumnType("bit");

                    b.Property<bool>("ReparoPintura")
                        .HasColumnType("bit");

                    b.Property<bool>("ReparoPiso")
                        .HasColumnType("bit");

                    b.Property<bool>("ReparoTeto")
                        .HasColumnType("bit");

                    b.Property<string>("SituacaoEletrica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacaoEsquadrias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacaoHidraulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacaoPintura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacaoPiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacaoTeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VistoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("VistoriaModelId")
                        .HasColumnType("int");

                    b.Property<int?>("VistoriadorModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VistoriaModelId");

                    b.HasIndex("VistoriadorModelId");

                    b.ToTable("Ambiente");
                });

            modelBuilder.Entity("VistoriaApp.Models.EnderecoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImovelId")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("VistoriaApp.Models.ImovelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("TipoImovel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Imovel");
                });

            modelBuilder.Entity("VistoriaApp.Models.LocatarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImovelId")
                        .IsUnique();

                    b.ToTable("Locatario");
                });

            modelBuilder.Entity("VistoriaApp.Models.VistoriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataVistoria")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedidorAgua")
                        .HasColumnType("int");

                    b.Property<int>("MedidorEnergia")
                        .HasColumnType("int");

                    b.Property<int>("TipoVistoria")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vistoria");
                });

            modelBuilder.Entity("VistoriaApp.Models.VistoriadorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VistoriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VistoriaId")
                        .IsUnique();

                    b.ToTable("Vistoriador");
                });

            modelBuilder.Entity("VistoriaApp.Models.AmbienteModel", b =>
                {
                    b.HasOne("VistoriaApp.Models.VistoriaModel", null)
                        .WithMany("Ambiente")
                        .HasForeignKey("VistoriaModelId");

                    b.HasOne("VistoriaApp.Models.VistoriadorModel", "VistoriadorModel")
                        .WithMany()
                        .HasForeignKey("VistoriadorModelId");

                    b.Navigation("VistoriadorModel");
                });

            modelBuilder.Entity("VistoriaApp.Models.EnderecoModel", b =>
                {
                    b.HasOne("VistoriaApp.Models.ImovelModel", "Imovel")
                        .WithOne("Endereco")
                        .HasForeignKey("VistoriaApp.Models.EnderecoModel", "ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("VistoriaApp.Models.LocatarioModel", b =>
                {
                    b.HasOne("VistoriaApp.Models.ImovelModel", "Imovel")
                        .WithOne("Locatario")
                        .HasForeignKey("VistoriaApp.Models.LocatarioModel", "ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("VistoriaApp.Models.VistoriadorModel", b =>
                {
                    b.HasOne("VistoriaApp.Models.VistoriaModel", "Vistoria")
                        .WithOne("Vistoriador")
                        .HasForeignKey("VistoriaApp.Models.VistoriadorModel", "VistoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vistoria");
                });

            modelBuilder.Entity("VistoriaApp.Models.ImovelModel", b =>
                {
                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Locatario")
                        .IsRequired();
                });

            modelBuilder.Entity("VistoriaApp.Models.VistoriaModel", b =>
                {
                    b.Navigation("Ambiente");

                    b.Navigation("Vistoriador")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
